import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	// Kotlin/JS with useCommonJs() outputs to this path
	entryPoints: ["shared/build/compileSync/js/main/developmentExecutable/kotlin/shared.js"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
	minify: prod,
});

// Check if we should watch for changes (only in dev mode and when explicitly requested)
const watch = process.argv.includes("--watch");

if (watch && !prod) {
	console.log("Watching for changes...");
	await context.watch();
} else {
	await context.rebuild();
	await context.dispose();
	console.log(prod ? "Production build complete!" : "Development build complete!");
}
